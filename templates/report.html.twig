{% extends "base.html.twig" %}

{% block title %}Report{% endblock %}

{% block body %}
    <h1>Report</h1>
    <small> - samlade rapport om kmoms, tillkom kmom01 -</small>
    <ul class="report-list">
        <li><a href="#kmom01">Kmom01</a></li>
        <li><a href="#kmom02">Kmom02</a></li>
        <li><a href="#kmom03">Kmom03</a></li>
    </ul>

    <section id="kmom01">
        <h2>Kmom01</h2>
        <p>
            Mina tidigare erfarenheter kring objekthantering sträcker sig till tidigare kurser inom denna utbildning.Inga tidigare erfarenheter. 
            Däremot gav jag upp denna kurs förra året, och är nu inne på revansh. Och det känns bättre i år. Jag är smartare, och kan ta till mig
            mer av den mängd information som kommer.
        </p>
        <p>
            PHPs modell för klasser startar med nyckelordet 'class' och man skapar då objekt utifrån klassen, som en mall. Först ger man klassen ett 
            namn och knyter sen ihop det hela med vad man behöver, det vill säga metoder och properties/medlemsvariabler, typ som funktioner och variabler.
            Klassen är en samling av funktioner som passar bra ihop.
        </p>
        <p>
            Uppgiften me/report kändes från början ganska enkel när jag läste på och kollade föreläsningar. Men sedan artade det sig till att bli klurigt. 
            Det är så många små moment att man tappar bort sig och går lite vilse. Det var även en hel del att se till att det fanns på plats innan, och rätt
            version osv. Tillskillnad från mitt förra år, läste precis min redovisning därifrån på kmom01 och det var deppigt alltså, så fungerade installationerna nu.
            Jag gillar ju ändå strukturen, men jag är inte hemma i att ha koll på var olika saker befinner sig, eller behöver befinna sig. Men det kommer väl.
        </p>
        <p>
            PHP the right way är en snygg översikt. En mängd saker finns samlat på ett bra sätt. Bara sätta igång och läsa allt eftersom. Många saker känns 
            ännu på en ganska hög nivå, mot vart jag är. Men ska verkligen använda den som ett uppslagsverk för alla dessa nya saker jag ska peta in. Jag läste
            till exempel om tid och datum, efter att jag löst tid och datum i uppgiften. Så nu har jag sett att jag inte gjorde helt rätt, men det fungerar.
            Vågar inte ändra.
        </p>
        <p>
            Jag har lärt mig att även om det är mycket, så kan man bryta ihop och komma igen. Så här är jag!
        </p>
    </section>

    <section id="kmom02">
        <h2>Kmom02</h2>
        <p>
            Arv är en utökning av en klass. Subklassen ärver från basklass. Exempel från kmom är Cards har en klass
            som ger text-resultat på korten, med en utökad class som ger bilder på korten istället för text. I PHP görs det
            genom att en klass extenderar en annan (class Card extends PicCard). 
        </p>
        <p>
            Komposition är när en klass använder en annan klass. Exempel på det från kmom är Korleken (Deck) använder korten
            (Card) när den skapar kortleken för att hämta värden och färg. Styrkan på relationen kan vara olika, att den under klassen inte
            finns om inte övre klassen finns (rum i ett hus, rummen finns ej utan hus) eller lättare sk aggression är inneboende
            i hus, där inneboende existerar även utan det huset. Båda fallen hanteras lika i PHP.
        </p>
        <p>
            Interface deklarerar metoder, som ett löfte att man använder dessa. Trait är koddelar man återanvänder. I PHP kan man inte
            använda multipla arv, utan då kommer dessa trait väl till pass.
        </p>
        <p>
            Implementeringen av uppgiften var klurig. Eftersom det nämndes på föreläsningen att det kommer mer spel i nästan kmom, så
            utgick jag lite från en Game-klass, som flöt runt i deta hela som en liten egen ö till slut. Hade jag inte fastnat på den 
            från började hade nog hela implementeringen varit lite lättare. Får väl se om jag saknar den i nästa kmom. Om inte annat
            kanske jag har dessa tankesnurror till nytta senare. Vi får se.
        </p>
        <p>
            Detta kmom är så stort och jag tappade hoppet ett par gånger. Nu när det är klart är jag ganska nöjd. Jag ser förbättringsmöjligheter på flera 
            ställen i mina klasser och Controller. Ju längre projektet gick fick jag igång bättre lösningar. 
            Lite renare, enklare och snyggare. Men sen blir tiden en faktor och jag går inte tillbaka och ändrar det nu, nu när allt fungerar. Men till 
            nästa kmom kan jag städa upp lite.
        </p>
        <p>
            Modellera sin kod med diagram och flöden är så klart bra. Att göra det nogrannt innan underlättar. Men jag har lite svårt med
            att se helheten innan jag börjat. Så mitt arbete blir lite förberedande och sedan får jag lappa ihop planen i efterhand. Jag kör
            från två håll.
        </p>
        <p>
            TIL för detta kmom, är planering och struktur. Det är mycket lättare innan och det blir jätte segt när man får starten fel och
            sätter igång.
        </p>
    </section>

    <section id="kmom03">
        <h2>Kmom03</h2>
        <p>
            Text
        </p>
        <p>
            Text
        </p>
    </section>
{% endblock %}